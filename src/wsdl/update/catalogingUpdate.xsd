<?xml version="1.0" encoding="utf-8"?>
<!-- catalogingUpdate.xsd version 2.0 -->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://oss.dbc.dk/ns/catalogingUpdate" elementFormDefault="qualified" targetNamespace="http://oss.dbc.dk/ns/catalogingUpdate">
  <!-- updateRecord request / response -->
  <xs:element name="updateRecord">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="updateRecordRequest" type="tns:UpdateRecordRequest"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="UpdateRecordRequest" type="tns:UpdateRecordRequest"/>
  <xs:complexType name="UpdateRecordRequest">
    <xs:sequence>
      <xs:element name="authentication" type="tns:Authentication" />
      <xs:element ref="tns:schemaName"/>
      <xs:element name="bibliographicRecord" type="tns:BibliographicRecord"/>
      <xs:element name="options" type="tns:Options" minOccurs="0"/>
      <xs:element ref="tns:trackingId" minOccurs="0"/>
      <xs:element ref="tns:doubleRecordKey" minOccurs="0" maxOccurs="1"/>
    </xs:sequence>
  </xs:complexType>

  <xs:element name="updateRecordResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="updateRecordResult" type="tns:UpdateRecordResult"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="UpdateRecordResult" type="tns:UpdateRecordResult"/>
  <xs:complexType name="UpdateRecordResult">
    <xs:sequence>
      <xs:element ref="tns:updateStatus"/>
      <xs:element ref="tns:doubleRecordKey" minOccurs="0" maxOccurs="1"/>
      <xs:element ref="tns:messages" minOccurs="0" maxOccurs="1"/>
    </xs:sequence>
  </xs:complexType>

  <!-- getSchemas request / response -->
  <xs:element name="getSchemas">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="tns:getSchemasRequest"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="getSchemasRequest" type="tns:GetSchemasRequest"/>
  <xs:complexType name="GetSchemasRequest">
    <xs:sequence>
      <xs:element name="authentication" type="tns:Authentication" />
      <xs:element ref="tns:trackingId" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:element name="getSchemasResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="getSchemasResult" type="tns:GetSchemasResult"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="GetSchemasResult" type="tns:GetSchemasResult"/>
  <xs:complexType name="GetSchemasResult">
    <xs:choice>
      <xs:sequence>
        <xs:element name="schema" type="tns:Schema" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element ref="tns:schemasStatus"/>
      </xs:sequence>
      <xs:element name="error" type="tns:Error"/>
    </xs:choice>
  </xs:complexType>

  <!-- structs -->
  <xs:element name="Authentication" type="tns:Authentication" />
  <xs:complexType name="Authentication">
    <xs:annotation>
      <xs:documentation xml:lang="en">Parameters used for authentication purposes</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element ref="tns:groupIdAut" />
      <xs:element ref="tns:passwordAut" />
      <xs:element ref="tns:userIdAut" />
    </xs:sequence>
  </xs:complexType>
  <xs:element name="BibliographicRecord" type="tns:BibliographicRecord"/>
  <xs:complexType name="BibliographicRecord">
    <xs:sequence>
      <xs:element ref="tns:recordSchema"/>
      <xs:element ref="tns:recordPacking"/>
      <xs:element name="recordData" type="tns:RecordData"/>
      <xs:element name="extraRecordData" type="tns:ExtraRecordData" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="ExtraRecordData" type="tns:ExtraRecordData"/>
  <xs:complexType name="ExtraRecordData" mixed="true">
    <xs:annotation>
      <xs:documentation xml:lang="en">Extra data for the update - normally not used.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="Options" type="tns:Options"/>
  <xs:complexType name="Options">
    <xs:sequence>
      <xs:element ref="tns:option" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="RecordData" type="tns:RecordData"/>
  <xs:complexType name="RecordData" mixed="true">
    <xs:annotation>
      <xs:documentation xml:lang="en">The record to update</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="Schema" type="tns:Schema"/>
  <xs:complexType name="Schema">
    <xs:sequence>
      <xs:element ref="tns:schemaName"/>
      <xs:element ref="tns:schemaInfo" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="messages" type="tns:messages"/>
  <xs:complexType name="messages">
    <xs:sequence>
      <xs:element ref="tns:entry" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="entry" type="tns:entry"/>
  <xs:complexType name="entry">
    <xs:sequence>
      <xs:element name="type" type="tns:type" minOccurs="1" maxOccurs="1"/>
      <xs:element ref="tns:code" minOccurs="0" maxOccurs="1"/>
      <xs:element ref="tns:params" minOccurs="0" maxOccurs="1"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="params" type="tns:params"/>
  <xs:complexType name="params">
    <xs:sequence>
      <xs:element ref="tns:param" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="param" type="tns:param"/>
  <xs:complexType name="param">
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute ref="tns:key"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <!-- types -->
  <xs:element name="doubleRecordReason" type="xs:string">
    <xs:annotation>
      <xs:documentation xml:lang="en">Details about the matchtype</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="doubleRecordPID" type="xs:string">
    <xs:annotation>
      <xs:documentation xml:lang="en">The PID for the matching record</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="groupIdAut" type="xs:string">
    <xs:annotation>
      <xs:documentation xml:lang="en">Identifier of the group (most often a library number) the user belongs to (for authentication purposes)</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="message" type="xs:string">
    <xs:annotation>
      <xs:documentation xml:lang="en">Explanation of the warning or error</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="option" type="tns:UpdateOptionEnum">
    <xs:annotation>
      <xs:documentation xml:lang="en">Option to alter the update.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="ordinalPositionOfField" type="xs:integer">
    <xs:annotation>
      <xs:documentation xml:lang="en">Ordinal position of field in record. -1 if not apllicable</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="ordinalPositionOfSubField" type="xs:integer">
    <xs:annotation>
      <xs:documentation xml:lang="en">Ordinal position of subfield in field. -1 if not apllicable</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="passwordAut" type="xs:string">
    <xs:annotation>
      <xs:documentation xml:lang="en">Password (for authentication purposes)</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="recordPacking" type="xs:string">
    <xs:annotation>
      <xs:documentation xml:lang="en">Defaults to xml.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="recordSchema" type="xs:string">
    <xs:annotation>
      <xs:documentation xml:lang="en">Defaults to: info:lc/xmlns/marcxchange-v1</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="schemaInfo" type="xs:string">
    <xs:annotation>
      <xs:documentation xml:lang="en">Information about validate schema.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="schemaName" type="xs:string">
    <xs:annotation>
      <xs:documentation xml:lang="en">Name of validate schema.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="schemasStatus" type="tns:SchemasStatusEnum">
    <xs:annotation>
      <xs:documentation xml:lang="en">Status for the get validate schemas.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="doubleRecordKey" type="xs:string">
    <xs:annotation>
      <xs:documentation xml:lang="en">Unique id to track handling of forced update of possible double records</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="trackingId" type="xs:string">
    <xs:annotation>
      <xs:documentation xml:lang="en">Unique id to track this request</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="urlForDocumentation" type="xs:anyURI">
    <xs:annotation>
      <xs:documentation xml:lang="en">url to documentation (danMarc2)</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="updateStatus" type="tns:UpdateStatusEnum">
    <xs:annotation>
      <xs:documentation xml:lang="en">Status for the update.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="doubleRecordMatch" type="tns:doubleRecordEnum">
    <xs:annotation>
      <xs:documentation xml:lang="en">Status for the update.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="userIdAut" type="xs:string">
    <xs:annotation>
      <xs:documentation xml:lang="en">User identifier (for authentication purposes)</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="code" type="xs:string">
    <xs:annotation>
      <xs:documentation xml:lang="en">Unique code to identify the exact area of problem in the service</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:attribute name="key" type="xs:string"/>

  <!-- enums -->
  <xs:simpleType name="Error">
    <xs:restriction base="xs:string">
      <xs:enumeration value="authentication_error"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="doubleRecordEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="doubleRecord"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="UpdateOptionEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="validate_only"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="UpdateStatusEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="ok"/>
      <xs:enumeration value="failed"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="SchemasStatusEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="ok"/>
      <xs:enumeration value="failed_internal_error"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="type">
    <xs:restriction base="xs:string">
      <xs:enumeration value="warning"/>
      <xs:enumeration value="error"/>
      <xs:enumeration value="double_record"/>
      <xs:enumeration value="fatal"/>
    </xs:restriction>
  </xs:simpleType>
</xs:schema>
