<?xml version="1.0" encoding="utf-8"?>
<!-- catalogingUpdate.xsd version 2.0b -->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://oss.dbc.dk/ns/catalogingUpdate"
           targetNamespace="http://oss.dbc.dk/ns/catalogingUpdate" elementFormDefault="qualified">
    <!-- updateRecord request / response -->
    <xs:element name="updateRecord">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="updateRecordRequest" type="tns:UpdateRecordRequest"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="updateRecordRequest" type="tns:UpdateRecordRequest"/>
    <xs:complexType name="UpdateRecordRequest">
        <xs:sequence>
            <xs:element ref="tns:authentication"/>
            <xs:element ref="tns:schemaName"/>
            <xs:element ref="tns:bibliographicRecord"/>
            <xs:element ref="tns:options" minOccurs="0"/>
            <xs:element ref="tns:trackingId" minOccurs="0"/>
            <xs:element ref="tns:doubleRecordKey" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>
    <xs:element name="updateRecordResponse">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="tns:updateRecordResult"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="updateRecordResult" type="tns:UpdateRecordResult"/>
    <xs:complexType name="UpdateRecordResult">
        <xs:sequence>
            <xs:element ref="tns:updateStatus"/>
            <xs:element ref="tns:doubleRecordKey" minOccurs="0"/>
            <xs:element ref="tns:messages" minOccurs="0"/>
            <xs:element ref="tns:doubleRecordEntries" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>
    <!-- getSchemas request / response -->
    <xs:element name="getSchemas">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="tns:getSchemasRequest"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="getSchemasRequest" type="tns:GetSchemasRequest"/>
    <xs:complexType name="GetSchemasRequest">
        <xs:sequence>
            <xs:element ref="tns:authentication"/>
            <xs:element ref="tns:trackingId" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>
    <xs:element name="getSchemasResponse">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="tns:getSchemasResult"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="getSchemasResult" type="tns:GetSchemasResult"/>
    <xs:complexType name="GetSchemasResult">
        <xs:sequence>
            <xs:element ref="tns:updateStatus"/>
            <xs:choice>
                <xs:element ref="tns:schema" maxOccurs="unbounded"/>
                <xs:element ref="tns:messages"/>
            </xs:choice>
        </xs:sequence>
    </xs:complexType>
    <!-- structs -->
    <xs:element name="authentication" type="tns:Authentication"/>
    <xs:complexType name="Authentication">
        <xs:annotation>
            <xs:documentation xml:lang="en">Parameters used for authentication purposes.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element ref="tns:groupIdAut"/>
            <xs:element ref="tns:passwordAut"/>
            <xs:element ref="tns:userIdAut"/>
        </xs:sequence>
    </xs:complexType>
    <xs:element name="bibliographicRecord" type="tns:BibliographicRecord"/>
    <xs:complexType name="BibliographicRecord">
        <xs:sequence>
            <xs:element ref="tns:recordSchema"/>
            <xs:element ref="tns:recordPacking"/>
            <xs:element ref="tns:recordData"/>
            <xs:element ref="tns:extraRecordData" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>
    <xs:element name="options" type="tns:Options"/>
    <xs:complexType name="Options">
        <xs:sequence>
            <xs:element ref="tns:option" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>
    <xs:element name="recordData" type="tns:RecordData"/>
    <xs:complexType name="RecordData" mixed="true">
        <xs:annotation>
            <xs:documentation xml:lang="en">The record to update</xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>
    <xs:element name="extraRecordData" type="tns:ExtraRecordData"/>
    <xs:complexType name="ExtraRecordData" mixed="true">
        <xs:annotation>
            <xs:documentation xml:lang="en">Extra data for the update.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>
    <xs:element name="schema" type="tns:Schema"/>
    <xs:complexType name="Schema">
        <xs:sequence>
            <xs:element ref="tns:schemaName"/>
            <xs:element ref="tns:schemaInfo" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>
    <xs:element name="messages" type="tns:Messages">
        <xs:annotation>
            <xs:documentation xml:lang="en">A list of zero or more messageEntry elements. Each incident the service
                produces will be shown in its own messageentry elemnt in the list.
            </xs:documentation>
        </xs:annotation>
    </xs:element>
    <xs:complexType name="Messages">
        <xs:sequence>
            <xs:element ref="tns:messageEntry" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>
    <xs:element name="messageEntry" type="tns:MessageEntry"/>
    <xs:complexType name="MessageEntry">
        <xs:sequence>
            <xs:element ref="tns:type"/>
            <xs:element ref="tns:code" minOccurs="0"/>
            <xs:element ref="tns:urlForDocumentation" minOccurs="0"/>
            <xs:element ref="tns:ordinalPositionOfField" minOccurs="0"/>
            <xs:element ref="tns:ordinalPositionOfSubfield" minOccurs="0"/>
            <xs:element ref="tns:ordinalPositionInSubfield" minOccurs="0"/>
            <xs:element ref="tns:message"/>
        </xs:sequence>
    </xs:complexType>
    <xs:element name="doubleRecordEntries" type="tns:DoubleRecordEntries">
        <xs:annotation>
            <xs:documentation xml:lang="en">A list of zero or more doubleRecordEntry elements. Each doubleRecord match
                will have it's own entry in the list.
            </xs:documentation>
        </xs:annotation>
    </xs:element>
    <xs:complexType name="DoubleRecordEntries">
        <xs:sequence>
            <xs:element ref="tns:doubleRecordEntry" minOccurs="1" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>
    <xs:element name="doubleRecordEntry" type="tns:DoubleRecordEntry"/>
    <xs:complexType name="DoubleRecordEntry">
        <xs:sequence>
            <xs:element ref="tns:pid"/>
            <xs:element ref="tns:message"/>
        </xs:sequence>
    </xs:complexType>
    <!-- types -->
    <xs:element name="groupIdAut" type="xs:string">
        <xs:annotation>
            <xs:documentation xml:lang="en">Identifier of the group (most often a library number) the user belongs to.
            </xs:documentation>
        </xs:annotation>
    </xs:element>
    <xs:element name="passwordAut" type="xs:string">
        <xs:annotation>
            <xs:documentation xml:lang="en">Authentication password.</xs:documentation>
        </xs:annotation>
    </xs:element>
    <xs:element name="userIdAut" type="xs:string">
        <xs:annotation>
            <xs:documentation xml:lang="en">User identifier.</xs:documentation>
        </xs:annotation>
    </xs:element>
    <xs:element name="option" type="tns:updateOptionEnum">
        <xs:annotation>
            <xs:documentation xml:lang="en">Option to alter the update.</xs:documentation>
        </xs:annotation>
    </xs:element>
    <xs:element name="recordPacking" type="xs:string">
        <xs:annotation>
            <xs:documentation xml:lang="en">Defaults to xml.</xs:documentation>
        </xs:annotation>
    </xs:element>
    <xs:element name="recordSchema" type="xs:string">
        <xs:annotation>
            <xs:documentation xml:lang="en">Defaults to: info:lc/xmlns/marcxchange-v1</xs:documentation>
        </xs:annotation>
    </xs:element>
    <xs:element name="schemaInfo" type="xs:string">
        <xs:annotation>
            <xs:documentation xml:lang="en">Information about validate schema.</xs:documentation>
        </xs:annotation>
    </xs:element>
    <xs:element name="schemaName" type="xs:string">
        <xs:annotation>
            <xs:documentation xml:lang="en">Name of validate schema.</xs:documentation>
        </xs:annotation>
    </xs:element>
    <xs:element name="doubleRecordKey" type="xs:string">
        <xs:annotation>
            <xs:documentation xml:lang="en">Unique id to track handling of forced update of possible double records.
            </xs:documentation>
        </xs:annotation>
    </xs:element>
    <xs:element name="trackingId" type="xs:string">
        <xs:annotation>
            <xs:documentation xml:lang="en">Unique id to track this request.</xs:documentation>
        </xs:annotation>
    </xs:element>
    <xs:element name="updateStatus" type="tns:updateStatusEnum">
        <xs:annotation>
            <xs:documentation xml:lang="en">Status for the update.</xs:documentation>
        </xs:annotation>
    </xs:element>
    <xs:element name="code" type="xs:string">
        <xs:annotation>
            <xs:documentation xml:lang="en">Unique code to identify the exact area of problem in the service.
            </xs:documentation>
        </xs:annotation>
    </xs:element>
    <xs:element name="pid" type="xs:string">
        <xs:annotation>
            <xs:documentation>Id used to find a record in the data well.</xs:documentation>
        </xs:annotation>
    </xs:element>
    <xs:element name="urlForDocumentation" type="xs:anyURI">
        <xs:annotation>
            <xs:documentation xml:lang="en">Url to danMarc2 documentation.</xs:documentation>
        </xs:annotation>
    </xs:element>
    <xs:element name="ordinalPositionOfField" type="tns:zeroOrPositiveInteger">
        <xs:annotation>
            <xs:documentation xml:lang="en">Ordinal position of field in record.</xs:documentation>
        </xs:annotation>
    </xs:element>
    <xs:element name="ordinalPositionOfSubfield" type="tns:zeroOrPositiveInteger">
        <xs:annotation>
            <xs:documentation xml:lang="en">Ordinal position of subfield in field.</xs:documentation>
        </xs:annotation>
    </xs:element>
    <xs:element name="ordinalPositionInSubfield" type="tns:zeroOrPositiveInteger">
        <xs:annotation>
            <xs:documentation xml:lang="en">Ordinal position in subfield in field. Ex. character number 5 is illegal in
                field.
            </xs:documentation>
        </xs:annotation>
    </xs:element>
    <xs:element name="message" type="xs:string">
        <xs:annotation>
            <xs:documentation xml:lang="en">If both ordinalPositionOfField and ordinalPositionOfSubField is present this
                message refers to a subfield error. If only ordinalPositionOfField is present the message refers to a
                field error. If neither of ordinalPositionOfField and ordinalPositionOfSubField are present the message
                refers to an record error.
            </xs:documentation>
        </xs:annotation>
    </xs:element>
    <xs:simpleType name="zeroOrPositiveInteger">
        <xs:restriction base="xs:int">
            <xs:minInclusive value="0"/>
        </xs:restriction>
    </xs:simpleType>
    <!-- enums -->
    <xs:simpleType name="updateOptionEnum">
        <xs:restriction base="xs:string">
            <xs:enumeration value="validate_only"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="updateStatusEnum">
        <xs:restriction base="xs:string">
            <xs:enumeration value="ok"/>
            <xs:enumeration value="failed"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:element name="type" type="tns:type"/>
    <xs:simpleType name="type">
        <xs:restriction base="xs:string">
            <xs:enumeration value="warning"/>
            <xs:enumeration value="error"/>
            <xs:enumeration value="fatal"/>
        </xs:restriction>
    </xs:simpleType>
</xs:schema>
